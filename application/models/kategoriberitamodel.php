<?php         if (!defined('BASEPATH')) exit('No direct script access allowed');    class Kategoriberitamodel extends CI_Model {                function  __construct() {            // Call the Model constructor            parent::__construct();        }                function get_total_propinsi() {            $sql = "SELECT COUNT(*)'total' FROM berita_kategori_m";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $result = $query->row_array();                $query->free_result();                return $result["total"];            } else {                return 0;            }        }         function get_max_kode_kategori_berita() {            $sql = "SELECT (MAX(id_kategori)+1)'max_id' FROM berita_kategori_m";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }        function is_exists_kategori_berita($kategori) {            $sql = "SELECT COUNT(*)'total' FROM berita_kategori_m WHERE LOWER(kategori_rubrik) = ?";            $query = $this->db->query($sql, array($kategori));            $result = $query->row_array();            $query->free_result();                        if (isset($result['total']) AND !empty($result['total'])) {                return true;            } else {                return false;            }        }                function is_exists_kategori_berita_edit($kategori) {            $id_kategori = $this->input->post('id_kategori');            $sql = "SELECT COUNT(*)'total' FROM berita_kategori_m WHERE LOWER(kategori_rubrik) = ? and id_kategori <> $id_kategori";            $query = $this->db->query($sql, array($kategori));            $result = $query->row_array();            $query->free_result();                        if (isset($result['total']) AND !empty($result['total'])) {                return true;            } else {                return false;            }        }                function get_data_propinsi($params) {            $sql = "SELECT a.* FROM berita_kategori_m a                ORDER BY kategori ASC LIMIT ?, ?";            $query = $this->db->query($sql, $params);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function get_all_profesi() {            $sql = "SELECT * FROM berita_kategori_m ORDER BY id_kategori ASC";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $return = $query->result_array();                $query->free_result();                return $return;            } else {                return false;            }        }                function get_all_profesi_order_id_profesi() {            $sql = "SELECT * FROM berita_kategori_m ORDER BY id_kategori ASC";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $return = $query->result_array();                $query->free_result();                return $return;            } else {                return false;            }        }                function get_kategori_berita_by_id($id_kategori) {            $this->db->where('id_kategori', $id_kategori);            $query = $this->db->get('berita_kategori_m');                        if ($query->num_rows() > 0) {                $return= $query->row_array();                $query->free_result();                return $return;            } else {                return false;            }        }                function process_kategori_berita_add($params) {            // insert into berita_kategori_m            $sql = "INSERT INTO berita_kategori_m (id_kategori, kategori_rubrik, urutan)                VALUES (?, ?, ?)";            return $this->db->query($sql, $params);        }                function process_kategori_berita_edit($params) {            // update into berita_kategori_m            $sql = "UPDATE berita_kategori_m SET kategori_rubrik = ?, urutan = ?                WHERE id_kategori = ?";            return $this->db->query($sql, $params);        }                    function process_kategori_berita_delete_one($id_kategori) {            $this->db->where('id_kategori', $id_kategori);            return $this->db->delete('berita_kategori_m');        }    }